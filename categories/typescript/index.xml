<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>typescript on Mai</title><link>https://zhangyadong.me/categories/typescript/</link><description>Recent content in typescript on Mai</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 05 Apr 2020 01:04:00 +0800</lastBuildDate><atom:link href="https://zhangyadong.me/categories/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>TypeScript 初体验</title><link>https://zhangyadong.me/2020/code_review/</link><pubDate>Sun, 05 Apr 2020 01:04:00 +0800</pubDate><guid>https://zhangyadong.me/2020/code_review/</guid><description>PropTypes 转换 PropTypes 是 React 对 prop 的一种类型检查机制，但从 v15.5 开始，官方已经用 prop-types 库替代了 React.PropTypes ，在 TypeScript 项目中使用 JavaScript 库时需要下载声明文件 *.d.ts ，即下载对应的 @types/prop-types ，用法如下
React + TypeScript PropTypes.bool boolean PropTypes.func () =&amp;gt; void PropTypes.number number PropTypes.object {} PropTypes.string string PropTypes.node React.ReactNode PropTypes.any any 另外，强制类型检查方式也不一样，举个例子，前者用 isTrue: PropTypes.bool.isRequired 和 name: PropTypes.string ，后者用 isTrue: boolean ， name?</description></item></channel></rss>